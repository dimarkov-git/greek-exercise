/* eslint-disable */
// This file is generated by scripts/generate-translation-registry.mjs
// Do not edit this file directly.

export const translationRegistry = {
	all: {fallback: 'All'},
	answer: {fallback: 'Answer'},
	'app.logoInitials': {fallback: 'ΜΕ'},
	'app.subtitle': {
		fallback: 'Interactive exercises for learning Greek language'
	},
	'app.title': {fallback: 'Learn Greek'},
	block: {fallback: 'Block'},
	'builder.customBadge': {fallback: 'Custom'},
	'builder.deleteButton': {fallback: 'Delete'},
	'builder.formatJson': {fallback: 'Format JSON'},
	'builder.jsonEditorHelp': {
		fallback:
			'Edit the JSON structure below. All required fields must be present.'
	},
	'builder.jsonEditorTitle': {fallback: 'Exercise JSON'},
	'builder.lastUpdated': {fallback: 'Updated {date}'},
	'builder.libraryInfo': {
		fallback:
			'Saved exercises stay in your browser and appear in the library alongside built-in content.'
	},
	'builder.loadButton': {fallback: 'Load'},
	'builder.noSavedExercises': {fallback: "You haven't saved any exercises yet"},
	'builder.openLibrary': {fallback: 'Open library'},
	'builder.parseError': {fallback: 'Parse error: {message}'},
	'builder.previewTitle': {fallback: 'Table preview'},
	'builder.previewUnavailable': {fallback: 'Preview unavailable'},
	'builder.previewUnavailableHint': {
		fallback: 'Fix validation errors to see a structured preview.'
	},
	'builder.resetTemplate': {fallback: 'Reset template'},
	'builder.saveError': {fallback: 'Could not save exercise'},
	'builder.saveSuccess': {fallback: 'Exercise saved'},
	'builder.saveToLibrary': {fallback: 'Save to library'},
	'builder.savedExercisesTitle': {fallback: 'My exercises'},
	'builder.typeHelp': {
		fallback: 'Choose the exercise type to load an editable template.'
	},
	'builder.typeSectionTitle': {fallback: 'Exercise setup'},
	'builder.validationEmpty': {fallback: 'Provide exercise JSON to validate'},
	'builder.validationError': {fallback: 'Errors'},
	'builder.validationHint': {
		fallback: 'Everything looks correct. You can save the exercise.'
	},
	'builder.validationSuccess': {fallback: 'Valid'},
	'builder.validationTitle': {fallback: 'Validation'},
	'builder.validationUnknown': {fallback: 'Unknown validation error'},
	'builder.wordFormType': {fallback: 'Word form exercise'},
	'buttons.back': {fallback: 'Back'},
	'buttons.cancel': {fallback: 'Cancel'},
	'buttons.continue': {fallback: 'Continue'},
	'buttons.create': {fallback: 'Create'},
	'buttons.delete': {fallback: 'Delete'},
	'buttons.edit': {fallback: 'Edit'},
	'buttons.next': {fallback: 'Next'},
	'buttons.save': {fallback: 'Save'},
	'buttons.start': {fallback: 'Start'},
	case: {fallback: 'Case'},
	clearFilters: {fallback: 'Clear Filters'},
	comingSoon: {fallback: 'Coming soon... 🚧'},
	copy: {fallback: 'Copy'},
	copyFailed: {fallback: 'Failed to copy'},
	copyJson: {fallback: 'Copy JSON'},
	darkTheme: {fallback: 'Dark'},
	difficulty: {fallback: 'Difficulty'},
	'difficulty.a0': {fallback: 'A0'},
	'difficulty.a1': {fallback: 'A1'},
	'difficulty.a2': {fallback: 'A2'},
	'difficulty.b1': {fallback: 'B1'},
	'difficulty.b2': {fallback: 'B2'},
	'difficulty.c1': {fallback: 'C1'},
	'difficulty.c2': {fallback: 'C2'},
	error: {fallback: 'Error'},
	'error.couldNotLoadExercise': {
		fallback: 'Error: Could not load exercise case'
	},
	'error.title': {fallback: 'Error'},
	'exercise.accuracy': {fallback: 'Accuracy'},
	'exercise.autoAdvance': {fallback: 'Auto-advance'},
	'exercise.autoAdvanceDisabled': {
		fallback: 'Auto-advance disabled - click to enable'
	},
	'exercise.autoAdvanceDisabledIcon': {fallback: 'Auto-advance disabled'},
	'exercise.autoAdvanceEnabled': {
		fallback: 'Auto-advance enabled - click to disable'
	},
	'exercise.autoAdvanceEnabledIcon': {fallback: 'Auto-advance enabled'},
	'exercise.backArrow': {fallback: 'Back arrow'},
	'exercise.backToLibrary': {fallback: 'Back to library'},
	'exercise.blocks': {fallback: 'blocks'},
	'exercise.cases': {fallback: 'cases'},
	'exercise.celebrationEmoji': {fallback: '🎉'},
	'exercise.checking': {fallback: 'Checking...'},
	'exercise.congratulations': {
		fallback: 'Congratulations! You completed the exercise'
	},
	'exercise.continue': {fallback: 'Continue'},
	'exercise.correct': {fallback: 'Correct'},
	'exercise.correctAnswerIs': {fallback: 'is correct.'},
	'exercise.correctAnswers': {fallback: 'Correct answers'},
	'exercise.correctIcon': {fallback: 'Correct answer'},
	'exercise.currentSettings': {fallback: 'Current Settings'},
	'exercise.difficulty': {fallback: 'Difficulty'},
	'exercise.enterCorrectAnswer': {fallback: 'Enter correct answer'},
	'exercise.enterCorrectAnswerToContinue': {
		fallback: 'Please enter the correct answer to continue.'
	},
	'exercise.enterCorrectToContinue': {
		fallback: 'Enter one of the correct answers to continue'
	},
	'exercise.enterKey': {fallback: 'to submit'},
	'exercise.enterKeyName': {fallback: 'Enter'},
	'exercise.exclamationMark': {fallback: '!'},
	'exercise.hintIcon': {fallback: 'Hint icon'},
	'exercise.incorrect': {fallback: 'Incorrect'},
	'exercise.incorrectAnswers': {fallback: 'Incorrect answers'},
	'exercise.incorrectIcon': {fallback: 'Incorrect answer'},
	'exercise.minutes': {fallback: 'min'},
	'exercise.notImplemented': {
		fallback: 'Exercise type "{type}" is not yet implemented.'
	},
	'exercise.percentSymbol': {fallback: '%'},
	'exercise.pressEnterToContinue': {
		fallback: 'Press Enter to continue to next question'
	},
	'exercise.progress': {fallback: 'Progress'},
	'exercise.progressOf': {fallback: 'of'},
	'exercise.restartExercise': {fallback: 'Start again'},
	'exercise.returnToLibrary': {fallback: 'Return to library'},
	'exercise.secondsSymbol': {fallback: 's'},
	'exercise.settingsInfo': {fallback: 'Settings information for this exercise'},
	'exercise.skip': {fallback: 'Skip'},
	'exercise.submit': {fallback: 'Submit'},
	'exercise.time': {fallback: 'Time'},
	'exercise.unsupportedType': {fallback: 'Unsupported Exercise Type'},
	'exercise.yourAnswerIs': {fallback: 'Your answer:'},
	exerciseBuilder: {fallback: 'Exercise Builder'},
	exerciseBuilderDesc: {fallback: 'Create your own exercises'},
	exerciseCount: {fallback: 'Available exercises: {filteredCount}'},
	exerciseLibrary: {fallback: 'Exercise Library'},
	exerciseLibraryDesc: {fallback: 'Browse and execute available exercises'},
	exerciseStructure: {fallback: 'Exercise Structure'},
	filters: {fallback: 'Filters'},
	'footer.copyright': {fallback: '© 2025 Learn Greek. All rights reserved.'},
	'footer.github': {fallback: 'GitHub'},
	'footer.madeWith': {fallback: 'Made by Denis with love'},
	'forms.invalid': {fallback: 'Invalid input'},
	'forms.loading': {fallback: 'Loading...'},
	'forms.required': {fallback: 'Required field'},
	'forms.saved': {fallback: 'Saved successfully'},
	'header.selectLanguage': {fallback: 'Select language'},
	'header.toggleTheme': {fallback: 'Toggle theme'},
	hint: {fallback: 'Hint'},
	hintLanguage: {fallback: 'Hint language'},
	interfaceLanguage: {fallback: 'Interface language'},
	jsonCopied: {fallback: 'JSON copied to clipboard'},
	jsonView: {fallback: 'JSON View'},
	language: {fallback: 'Language'},
	learn: {fallback: 'Learn'},
	learnExercise: {fallback: 'Learn Exercise'},
	lightTheme: {fallback: 'Light'},
	'messages.error': {fallback: 'Something went wrong'},
	'messages.noData': {fallback: 'No data available'},
	'messages.success': {fallback: 'Operation completed successfully'},
	'messages.welcome': {fallback: 'Welcome to Greek Exercise App'},
	'navigation.builder': {fallback: 'Builder'},
	'navigation.close': {fallback: 'Close'},
	'navigation.home': {fallback: 'Home'},
	'navigation.library': {fallback: 'Library'},
	'navigation.menu': {fallback: 'Menu'},
	'navigation.profile': {fallback: 'Profile'},
	'navigation.testSection': {fallback: 'Test Section'},
	noExercisesFound: {fallback: 'No exercises found'},
	noExercisesFoundDesc: {
		fallback: 'Try adjusting your filters or browse all exercises'
	},
	prompt: {fallback: 'Prompt'},
	settings: {fallback: 'Settings'},
	startExercise: {fallback: 'Start Exercise'},
	success: {fallback: 'Success'},
	tableView: {fallback: 'Table View'},
	tags: {fallback: 'Tags'},
	'testI18n.currentLanguage': {fallback: 'Current Language'},
	'testI18n.demo.greeting': {fallback: 'Hello and welcome!'},
	'testI18n.demo.instructions': {
		fallback:
			'Switch languages using the controls above to see how translations change dynamically.'
	},
	'testI18n.demo.switchLanguage': {fallback: 'Switch language to see changes'},
	'testI18n.demo.welcome': {
		fallback: 'Welcome to the i18n system demonstration page.'
	},
	'testI18n.info.errorState': {fallback: 'Error State'},
	'testI18n.info.loadingState': {fallback: 'Loading State'},
	'testI18n.info.missingKeys': {fallback: 'Missing Keys'},
	'testI18n.info.totalKeys': {fallback: 'Total Keys'},
	'testI18n.info.translationStatus': {fallback: 'Translation Status'},
	'testI18n.languageControls': {fallback: 'Language Controls'},
	'testI18n.pageDescription': {
		fallback:
			'This page showcases the i18n system features and different translation scenarios'
	},
	'testI18n.pageTitle': {fallback: 'Internationalization Test Page'},
	'testI18n.scenarios.basic.description': {
		fallback:
			'Simple key-value translations that change with the current UI language'
	},
	'testI18n.scenarios.basic.multilineText': {
		fallback:
			'This is a multiline text example.\nIt spans multiple lines\nand demonstrates how the i18n system handles longer content.'
	},
	'testI18n.scenarios.basic.sampleText': {
		fallback: 'This is a sample text that will be translated'
	},
	'testI18n.scenarios.basic.title': {fallback: 'Basic Translation'},
	'testI18n.scenarios.fixed.description': {
		fallback:
			'Keys that remain in a specific language regardless of UI language setting'
	},
	'testI18n.scenarios.fixed.title': {fallback: 'Fixed Language Keys'},
	'testI18n.scenarios.missing.description': {
		fallback:
			'How the system handles missing translation keys with different policies'
	},
	'testI18n.scenarios.missing.fallbackPolicy': {fallback: 'Fallback Policy'},
	'testI18n.scenarios.missing.keyPolicy': {fallback: 'Key Policy'},
	'testI18n.scenarios.missing.missingKey': {
		fallback: 'This key does not exist in translations'
	},
	'testI18n.scenarios.missing.title': {
		fallback: 'Missing Translation Handling'
	},
	'testI18n.scenarios.status.complete': {fallback: 'Complete'},
	'testI18n.scenarios.status.description': {
		fallback: 'Shows the current status of translation loading and processing'
	},
	'testI18n.scenarios.status.error': {fallback: 'Error'},
	'testI18n.scenarios.status.loading': {fallback: 'Loading'},
	'testI18n.scenarios.status.missing': {fallback: 'Missing'},
	'testI18n.scenarios.status.partial': {fallback: 'Partial'},
	'testI18n.scenarios.status.title': {fallback: 'Translation Status'},
	'testI18n.scenarios.unicode.cyrillicSample': {
		fallback: 'Привет! Добро пожаловать в Россию 🇷🇺'
	},
	'testI18n.scenarios.unicode.description': {
		fallback:
			'Demonstration of Unicode character handling across different scripts'
	},
	'testI18n.scenarios.unicode.greekSample': {
		fallback: 'Γεια σας! Καλώς ήρθατε στην Ελλάδα 🇬🇷'
	},
	'testI18n.scenarios.unicode.mixedSample': {
		fallback: 'Mixed: αβγδ + АБВГ + 123 + 🎉'
	},
	'testI18n.scenarios.unicode.title': {fallback: 'Unicode Support'},
	'testI18n.tabs.basic': {fallback: 'Basic'},
	'testI18n.tabs.fixed': {fallback: 'Fixed Language'},
	'testI18n.tabs.missing': {fallback: 'Missing Keys'},
	'testI18n.tabs.status': {fallback: 'Status'},
	'testI18n.tabs.unicode': {fallback: 'Unicode'},
	testSection: {fallback: 'Test Section'},
	testSectionDesc: {
		fallback: 'Test i18n system features and showcase translations'
	},
	theme: {fallback: 'Theme'},
	'ui.backToHome': {fallback: '← Back to Home'},
	'ui.booksEmoji': {fallback: '📚'},
	'ui.booksIcon': {fallback: '📚'},
	'ui.chevronDown': {fallback: '▼'},
	'ui.chevronUp': {fallback: '▲'},
	'ui.clockIcon': {fallback: '⏱️'},
	'ui.collapse': {fallback: 'Collapse'},
	'ui.colon': {fallback: ':'},
	'ui.documentEmoji': {fallback: '📝'},
	'ui.dropdownArrow': {fallback: 'Dropdown arrow'},
	'ui.emptyHint': {fallback: '—'},
	'ui.expand': {fallback: 'Expand'},
	'ui.hashSymbol': {fallback: '#'},
	'ui.leftArrow': {fallback: '←'},
	'ui.moonEmoji': {fallback: '🌙'},
	'ui.notesIcon': {fallback: '📝'},
	'ui.playIcon': {fallback: '▶'},
	'ui.plusSymbol': {fallback: '+'},
	'ui.searchEmoji': {fallback: '🔍'},
	'ui.selectedLanguage': {fallback: 'Selected language'},
	'ui.sunEmoji': {fallback: '☀️'},
	'ui.timerEmoji': {fallback: '⏱️'},
	'ui.toolsEmoji': {fallback: '🔧'},
	userLanguage: {fallback: 'Your language'},
	userLanguageDescription: {
		fallback:
			'Choose a language you already know. It will be used for hints in exercises.'
	},
	userLanguageLabel: {fallback: 'Hints Language:'}
} as const

export type TranslationRegistry = typeof translationRegistry
export type TranslationRegistryKey = keyof TranslationRegistry
export const TRANSLATION_REGISTRY_KEYS = Object.keys(
	translationRegistry
) as TranslationRegistryKey[]
